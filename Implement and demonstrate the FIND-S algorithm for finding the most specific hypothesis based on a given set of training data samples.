def find_s_algorithm(training_data):
    hypothesis = training_data[0][:-1]  # Ignore the last element, which is the label
    for example in training_data:
        if example[-1] == 1:  # Check if the example is positive (1 is the label for positive examples)
            for i in range(len(hypothesis)):
                if hypothesis[i] != example[i]:
                    hypothesis[i] = '?'
    return hypothesis

def main():
    training_data = [
        ['Sunny', 'Hot', 'High', 'Weak', 0],
        ['Sunny', 'Hot', 'High', 'Strong', 0],
        ['Overcast', 'Hot', 'High', 'Weak', 1],
        ['Rain', 'Mild', 'High', 'Weak', 1],
        ['Rain', 'Cool', 'Normal', 'Weak', 1],
        ['Rain', 'Cool', 'Normal', 'Strong', 0],
        ['Overcast', 'Cool', 'Normal', 'Strong', 1],
        ['Sunny', 'Mild', 'High', 'Weak', 0],
        ['Sunny', 'Cool', 'Normal', 'Weak', 1],
        ['Rain', 'Mild', 'Normal', 'Weak', 1],
        ['Sunny', 'Mild', 'Normal', 'Strong', 1],
        ['Overcast', 'Mild', 'High', 'Strong', 1],
        ['Overcast', 'Hot', 'Normal', 'Weak', 1],
        ['Rain', 'Mild', 'High', 'Strong', 0],
    ]

    hypothesis = find_s_algorithm(training_data)
    print("Most specific hypothesis:", hypothesis)

if __name__ == "__main__":
    main()

